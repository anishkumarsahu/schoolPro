# Generated by Django 4.2.8 on 2023-12-24 19:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import stdimage.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AssignClassSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('isDeleted', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'o) Assign Class Subject',
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startExamDate', models.DateField(blank=True, null=True)),
                ('endExamDate', models.DateField(blank=True, null=True)),
                ('fullMark', models.CharField(blank=True, max_length=500, null=True)),
                ('passMark', models.CharField(blank=True, max_length=500, null=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('isDeleted', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 's) Exam',
            },
        ),
        migrations.CreateModel(
            name='ParentDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fatherFirstName', models.CharField(blank=True, max_length=500, null=True)),
                ('fatherMiddleName', models.CharField(blank=True, max_length=500, null=True)),
                ('fatherLastName', models.CharField(blank=True, max_length=500, null=True)),
                ('motherFirstName', models.CharField(blank=True, max_length=500, null=True)),
                ('motherMiddleName', models.CharField(blank=True, max_length=500, null=True)),
                ('motherLastName', models.CharField(blank=True, max_length=500, null=True)),
                ('occupation', models.CharField(blank=True, max_length=500, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.CharField(blank=True, max_length=500, null=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('isDeleted', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'k) Parent Details',
            },
        ),
        migrations.CreateModel(
            name='SchoolDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('logo', stdimage.models.StdImageField(blank=True, force_min_size=False, null=True, upload_to='SchoolLogo', variations={'thumbnail': {'height': 250, 'width': 250}})),
                ('address', models.TextField()),
                ('city', models.CharField(blank=True, max_length=500, null=True)),
                ('state', models.CharField(blank=True, max_length=500, null=True)),
                ('country', models.CharField(blank=True, max_length=500, null=True)),
                ('pinCode', models.CharField(blank=True, max_length=15, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.CharField(blank=True, max_length=500, null=True)),
                ('website', models.CharField(blank=True, max_length=500, null=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('ownerID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'b) School Detail.',
            },
        ),
        migrations.CreateModel(
            name='SchoolSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionYear', models.CharField(blank=True, max_length=500, null=True)),
                ('isCurrent', models.BooleanField(default=False)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('schoolID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schooldetail')),
            ],
            options={
                'verbose_name_plural': 'd) School Session.',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('startingRoll', models.CharField(blank=True, max_length=500, null=True)),
                ('endingRoll', models.CharField(blank=True, max_length=500, null=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('isDeleted', models.BooleanField(default=False)),
                ('schoolID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schooldetail')),
                ('sessionID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schoolsession')),
            ],
            options={
                'verbose_name_plural': 'i) Section Details',
            },
        ),
        migrations.CreateModel(
            name='Standard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('classLocation', models.CharField(blank=True, default='No Data', max_length=500, null=True)),
                ('hasSection', models.CharField(blank=True, max_length=500, null=True)),
                ('startingRoll', models.CharField(blank=True, max_length=500, null=True)),
                ('endingRoll', models.CharField(blank=True, max_length=500, null=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('isDeleted', models.BooleanField(default=False)),
                ('schoolID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schooldetail')),
                ('sessionID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schoolsession')),
            ],
            options={
                'verbose_name_plural': 'h) Standard Details',
            },
        ),
        migrations.CreateModel(
            name='StudentDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(blank=True, max_length=500, null=True)),
                ('middleName', models.CharField(blank=True, max_length=500, null=True)),
                ('lastName', models.CharField(blank=True, max_length=500, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.CharField(blank=True, max_length=500, null=True)),
                ('DOB', models.DateField(blank=True, null=True)),
                ('aadhar', models.CharField(blank=True, max_length=500, null=True)),
                ('gender', models.CharField(blank=True, max_length=500, null=True)),
                ('bloodGroup', models.CharField(blank=True, max_length=500, null=True)),
                ('presentAddress', models.TextField(blank=True, null=True)),
                ('presentPinCode', models.CharField(blank=True, max_length=500, null=True)),
                ('presentCity', models.CharField(blank=True, max_length=500, null=True)),
                ('presentState', models.CharField(blank=True, max_length=500, null=True)),
                ('presentCountry', models.CharField(blank=True, max_length=500, null=True)),
                ('permanentAddress', models.TextField(blank=True, null=True)),
                ('permanentPinCode', models.CharField(blank=True, max_length=500, null=True)),
                ('permanentCity', models.CharField(blank=True, max_length=500, null=True)),
                ('permanentState', models.CharField(blank=True, max_length=500, null=True)),
                ('permanentCountry', models.CharField(blank=True, max_length=500, null=True)),
                ('rollNumber', models.CharField(blank=True, max_length=500, null=True)),
                ('photo', stdimage.models.StdImageField(blank=True, force_min_size=False, null=True, upload_to='StudentImage', variations={'thumbnail': {'height': 250, 'width': 250}})),
                ('username', models.CharField(blank=True, max_length=500, null=True)),
                ('password', models.CharField(blank=True, max_length=500, null=True)),
                ('dateOfJoining', models.DateField(blank=True, null=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('isActive', models.BooleanField(default=True)),
                ('isDeleted', models.BooleanField(default=False)),
                ('uniqueKey', models.CharField(blank=True, max_length=8, null=True)),
                ('parentID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.parentdetail')),
                ('schoolID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schooldetail')),
                ('sectionID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.section')),
                ('sessionID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schoolsession')),
                ('standardID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.standard')),
                ('userID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'l) Student Details',
            },
        ),
        migrations.CreateModel(
            name='TeacherDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(blank=True, max_length=500, null=True)),
                ('middleName', models.CharField(blank=True, max_length=500, null=True)),
                ('lastName', models.CharField(blank=True, max_length=500, null=True)),
                ('DOB', models.DateField(blank=True, null=True)),
                ('aadhar', models.CharField(blank=True, max_length=500, null=True)),
                ('gender', models.CharField(blank=True, max_length=500, null=True)),
                ('bloodGroup', models.CharField(blank=True, max_length=500, null=True)),
                ('presentAddress', models.TextField(blank=True, null=True)),
                ('presentPinCode', models.CharField(blank=True, max_length=500, null=True)),
                ('presentCity', models.CharField(blank=True, max_length=500, null=True)),
                ('presentState', models.CharField(blank=True, max_length=500, null=True)),
                ('presentCountry', models.CharField(blank=True, max_length=500, null=True)),
                ('permanentAddress', models.TextField(blank=True, null=True)),
                ('permanentPinCode', models.CharField(blank=True, max_length=500, null=True)),
                ('permanentCity', models.CharField(blank=True, max_length=500, null=True)),
                ('permanentState', models.CharField(blank=True, max_length=500, null=True)),
                ('permanentCountry', models.CharField(blank=True, max_length=500, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.CharField(blank=True, max_length=500, null=True)),
                ('photo', stdimage.models.StdImageField(blank=True, force_min_size=False, null=True, upload_to='TeacherImage', variations={'thumbnail': {'height': 250, 'width': 250}})),
                ('username', models.CharField(blank=True, max_length=500, null=True)),
                ('password', models.CharField(blank=True, max_length=500, null=True)),
                ('dateOfJoining', models.DateField(blank=True, null=True)),
                ('dateOfLeaving', models.DateField(blank=True, null=True)),
                ('currentPosition', models.CharField(blank=True, max_length=500, null=True)),
                ('EmployeeCode', models.CharField(blank=True, max_length=500, null=True)),
                ('qualification', models.CharField(blank=True, max_length=500, null=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('isActive', models.BooleanField(default=True)),
                ('isDeleted', models.BooleanField(default=False)),
                ('schoolID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schooldetail')),
                ('sessionID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schoolsession')),
                ('userID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'g) Teachers Details',
            },
        ),
        migrations.CreateModel(
            name='TeacherAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isAbsent', models.BooleanField(default=False)),
                ('attendanceDate', models.DateTimeField(blank=True, null=True)),
                ('reason', models.CharField(blank=True, max_length=500, null=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('schoolID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schooldetail')),
                ('sessionID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schoolsession')),
                ('teacherID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.teacherdetail')),
            ],
            options={
                'verbose_name_plural': 'm) Teacher Attendance.',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subjectName', models.CharField(blank=True, max_length=500, null=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('isDeleted', models.BooleanField(default=False)),
                ('schoolID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schooldetail')),
                ('sessionID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schoolsession')),
            ],
            options={
                'verbose_name_plural': 'n) Subject',
            },
        ),
        migrations.CreateModel(
            name='StudentFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(blank=True, max_length=100, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('payDate', models.DateField(blank=True, null=True)),
                ('isPaid', models.BooleanField(default=False)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('isDeleted', models.BooleanField(default=False)),
                ('schoolID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schooldetail')),
                ('sessionID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schoolsession')),
                ('studentID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.studentdetail')),
            ],
            options={
                'verbose_name_plural': 'w) Student Fee',
            },
        ),
        migrations.CreateModel(
            name='StudentAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isAbsent', models.BooleanField(default=False)),
                ('attendanceDate', models.DateTimeField(blank=True, null=True)),
                ('reason', models.CharField(blank=True, max_length=500, null=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('schoolID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schooldetail')),
                ('sectionID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.section')),
                ('sessionID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schoolsession')),
                ('standardID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.standard')),
                ('studentID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.studentdetail')),
                ('subjectID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.assignclasssubject')),
            ],
            options={
                'verbose_name_plural': 'p) Student Attendance',
            },
        ),
        migrations.CreateModel(
            name='SendSms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, null=True)),
                ('to', models.TextField(blank=True, null=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('isDeleted', models.BooleanField(default=False)),
                ('schoolID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schooldetail')),
                ('sessionID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schoolsession')),
            ],
        ),
        migrations.AddField(
            model_name='section',
            name='standardID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.standard'),
        ),
        migrations.CreateModel(
            name='SchoolSocialLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facebook', models.CharField(blank=True, default='NaN', max_length=500, null=True)),
                ('twitter', models.CharField(blank=True, default='NaN', max_length=500, null=True)),
                ('googlePlus', models.CharField(blank=True, default='NaN', max_length=500, null=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('ownerID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('schoolID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schooldetail')),
            ],
            options={
                'verbose_name_plural': 'c) School Social Links.',
            },
        ),
        migrations.CreateModel(
            name='SchoolOwner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('email', models.CharField(blank=True, max_length=500, null=True)),
                ('password', models.CharField(blank=True, max_length=500, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=15, null=True)),
                ('username', models.CharField(blank=True, max_length=500, null=True)),
                ('userGroup', models.CharField(blank=True, max_length=500, null=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('userID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'a) School Owner.',
            },
        ),
        migrations.AddField(
            model_name='parentdetail',
            name='schoolID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schooldetail'),
        ),
        migrations.AddField(
            model_name='parentdetail',
            name='sessionID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schoolsession'),
        ),
        migrations.CreateModel(
            name='NonTeachingStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(blank=True, max_length=500, null=True)),
                ('middleName', models.CharField(blank=True, max_length=500, null=True)),
                ('lastName', models.CharField(blank=True, max_length=500, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.CharField(blank=True, max_length=500, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=500, null=True)),
                ('pinCode', models.CharField(blank=True, max_length=500, null=True)),
                ('state', models.CharField(blank=True, max_length=500, null=True)),
                ('country', models.CharField(blank=True, max_length=500, null=True)),
                ('aadhar', models.CharField(blank=True, max_length=500, null=True)),
                ('DOB', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=500, null=True)),
                ('bloodGroup', models.CharField(blank=True, max_length=500, null=True)),
                ('EmployeeCode', models.CharField(blank=True, max_length=500, null=True)),
                ('currentPosition', models.CharField(blank=True, max_length=500, null=True)),
                ('qualification', models.CharField(blank=True, max_length=500, null=True)),
                ('joinDate', models.DateField(blank=True, null=True)),
                ('releaveDate', models.DateField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=500, null=True)),
                ('password', models.CharField(blank=True, max_length=500, null=True)),
                ('photo', stdimage.models.StdImageField(blank=True, force_min_size=False, null=True, upload_to='NonTeachingStaff', variations={'thumbnail': {'height': 250, 'width': 250}})),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('isActive', models.BooleanField(default=True)),
                ('isDeleted', models.BooleanField(default=False)),
                ('schoolID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schooldetail')),
                ('sessionID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schoolsession')),
                ('userID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'f) Non- Teaching Staff.',
            },
        ),
        migrations.CreateModel(
            name='MarkOfStudentsByExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, max_length=500, null=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('isDeleted', models.BooleanField(default=False)),
                ('examID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.exam')),
                ('schoolID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schooldetail')),
                ('sectionID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.section')),
                ('sessionID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schoolsession')),
                ('standardID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.standard')),
                ('studentID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.studentdetail')),
                ('subjectID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.assignclasssubject')),
            ],
            options={
                'verbose_name_plural': 'u) Mark Of Students By Exam',
            },
        ),
        migrations.CreateModel(
            name='ExamList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('examName', models.CharField(blank=True, max_length=500, null=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('isDeleted', models.BooleanField(default=False)),
                ('schoolID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schooldetail')),
                ('sessionID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schoolsession')),
            ],
            options={
                'verbose_name_plural': 'r) Exam List',
            },
        ),
        migrations.AddField(
            model_name='exam',
            name='classID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.standard'),
        ),
        migrations.AddField(
            model_name='exam',
            name='examID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.examlist'),
        ),
        migrations.AddField(
            model_name='exam',
            name='schoolID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schooldetail'),
        ),
        migrations.AddField(
            model_name='exam',
            name='sessionID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schoolsession'),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('startDate', models.DateField(blank=True, null=True)),
                ('endDate', models.DateField(blank=True, null=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('isDeleted', models.BooleanField(default=False)),
                ('schoolID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schooldetail')),
                ('sessionID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schoolsession')),
            ],
            options={
                'verbose_name_plural': 'v) Event',
            },
        ),
        migrations.CreateModel(
            name='ComputerOperator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(blank=True, max_length=500, null=True)),
                ('middleName', models.CharField(blank=True, max_length=500, null=True)),
                ('lastName', models.CharField(blank=True, max_length=500, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.CharField(blank=True, max_length=500, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=500, null=True)),
                ('pinCode', models.CharField(blank=True, max_length=500, null=True)),
                ('state', models.CharField(blank=True, max_length=500, null=True)),
                ('country', models.CharField(blank=True, max_length=500, null=True)),
                ('aadhar', models.CharField(blank=True, max_length=500, null=True)),
                ('DOB', models.DateField(blank=True, null=True)),
                ('qualification', models.CharField(blank=True, max_length=500, null=True)),
                ('joinDate', models.DateField(blank=True, null=True)),
                ('releaveDate', models.DateField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=500, null=True)),
                ('password', models.CharField(blank=True, max_length=500, null=True)),
                ('photo', stdimage.models.StdImageField(blank=True, force_min_size=False, null=True, upload_to='OperatorImage', variations={'thumbnail': {'height': 250, 'width': 250}})),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('isActive', models.BooleanField(default=True)),
                ('isDeleted', models.BooleanField(default=False)),
                ('schoolID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schooldetail')),
                ('sessionID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schoolsession')),
                ('userID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'e) Computer Operator.',
            },
        ),
        migrations.CreateModel(
            name='AssignTeacherToClassOrSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('isAssign', models.BooleanField(default=True)),
                ('classTeacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.teacherdetail')),
                ('schoolID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schooldetail')),
                ('sectionID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.section')),
                ('sessionID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schoolsession')),
                ('standardID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.standard')),
            ],
            options={
                'verbose_name_plural': 'j)Assign Teacher To Class Or Section',
            },
        ),
        migrations.CreateModel(
            name='AssignSubjectToTeacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('isDeleted', models.BooleanField(default=False)),
                ('classID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.standard')),
                ('schoolID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schooldetail')),
                ('sectionID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.section')),
                ('sessionID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schoolsession')),
                ('subjectID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.assignclasssubject')),
                ('teacherID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.teacherdetail')),
            ],
            options={
                'verbose_name_plural': 'q) Assign Subject To Teacher',
            },
        ),
        migrations.CreateModel(
            name='AssignExamSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullMark', models.CharField(blank=True, max_length=500, null=True)),
                ('passMark', models.CharField(blank=True, max_length=500, null=True)),
                ('examDate', models.DateField(blank=True, null=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('lastUpdatedOn', models.DateTimeField(auto_now=True)),
                ('isDeleted', models.BooleanField(default=False)),
                ('examID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.exam')),
                ('schoolID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schooldetail')),
                ('sessionID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schoolsession')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.subject')),
            ],
            options={
                'verbose_name_plural': 't) AssignExamSubject',
            },
        ),
        migrations.AddField(
            model_name='assignclasssubject',
            name='classID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.standard'),
        ),
        migrations.AddField(
            model_name='assignclasssubject',
            name='schoolID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schooldetail'),
        ),
        migrations.AddField(
            model_name='assignclasssubject',
            name='sessionID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.schoolsession'),
        ),
        migrations.AddField(
            model_name='assignclasssubject',
            name='subjectID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolApp.subject'),
        ),
    ]
